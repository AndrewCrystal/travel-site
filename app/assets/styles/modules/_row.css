.row {
	/* GRID MODIFICATIONS - these are shoe-horned into the existing structure and css and aren't very graceful.  As grid is so powerful and easy he probably wouldn't bother with universal site row and would just deal with each section on it's own with it's own css 
  
  video here around 36 - 44 mins - https://www.youtube.com/watch?v=DJq6R2b0FoE 
  */

	/*
	@mixin clearfix {
	} don't need to clear floats anymore - switched to grid */

	&--t-padding {
		padding-top: 80px;
	}

	/* select direct children of parent */
	/* don't need these either - grid
	&--gutters > div {
		padding-right: 65px;
	}

	&--gutters-large > div {
		padding-right: 100px;
	}

	&--gutters-small > div {
		padding-right: 45px;
	} */

	&__b-margin-until-medium {
		margin-bottom: 1rem;
	}

	@mixin atMedium {
		display: grid;
		grid-template-columns: repeat(12, 1fr);

		/* this overrides the right padding below and cancels it out for the right most element in a row - should be used in conjunction with overflow: hidden on wrapper */
		&--gutters {
			/* margin-right: -65px; don't need - grid */
			column-gap: 5.3%; /* % more responsive than px - if using say 12 columns and having a 50px gap then gaps are wider than smartphone screen so content pushed off screen */
		}

		&--gutters-large {
			/* margin-right: -100px; don't need - grid */
			column-gap: 8%;
		}

		&--gutters-small {
			/* margin-right: -45px; don't need - grid */
			column-gap: 3.6%;
		}

		&__b-margin-until-medium {
			margin-bottom: 0;
		}

		&__large-1,
		&__large-2,
		&__large-3,
		&__large-4,
		&__large-5,
		&__large-6,
		&__large-7,
		&__large-8,
		&__large-9,
		&__large-10,
		&__large-11,
		&__large-12 {
			grid-column: span 12;
		}

		&__medium-4 {
			/* float: left;
			width: 33.33%; */
			grid-column: span 4;
		}

		/* &__medium-4--larger {
			width: 37%; 
		} */

		&__medium-6 {
			/*	float: left;
			width: 50%; */
			grid-column: span 6;
		}

		&__medium-8 {
			/*	float: left;
			width: 66.66%; */
			grid-column: span 8;
		}

		/* &__medium-8--smaller {
			width: 63%; 
		} */
	}

	@mixin atLarge {
		&__b-margin-until-large {
			margin-bottom: 0;
		}

		&__large-4 {
			/* float: left;
			width: 33.33%; */
			grid-column: span 4;
		}

		/* &__large-4--larger {
			width: 37%;
		}*/

		&__large-6 {
			/* float: left;
			width: 50%; */
			grid-column: span 6;
		}

		&__large-8 {
			/* float: left;
			width: 66.66%; */
			grid-column: span 8;
		}

		/* &__large-8--smaller {
			width: 63%;
		} */
	}

	/* Begin equal height rules */
	&--equal-height-at-medium {
		@mixin atMedium {
			display: flex;
		}

		/* select direct descendants of --equal-height-at-medium */
		& > div {
			float: none;
			display: flex;
		}
	}

	&--equal-height-at-large {
		@mixin atLarge {
			/* display: flex; removed as it affects the width of the grid now we've removed floats - dont' want flex on parent row though*/

			/* select direct descendants of --equal-height-at-medium */
			& > div {
				/* float: none; */
				display: flex; /* do want flex here so they keep same height */
			}
		}
	}
}
